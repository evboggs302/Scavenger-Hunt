# See: https://circleci.com/docs/configuration-reference
# The DEPLOY jobs end with a deploy to Render.com via webhook.
# The steps before the deploy webhook have no impact on the actual
# deploy process, as Render will run those same commands during its
# deploy process. Those steps are run here so I can potentially
# catch any issues before the deploy webhook is called.

version: 2.1

docker-node: &docker-node
  docker:
    - image: cimg/node:22.13.0

git-checkout-root: &git-checkout-root
  checkout:
    path: ~/scavenger-hunt

yarn-install-step: &yarn-install
  run:
    name: yarn install
    no_output_timeout: 30m # just in case Render has a slow environment
    command: yarn install --frozen-lockfile

tsc-check-step: &tsc-check
  run:
    name: tsc check
    command: yarn tsc-check

# NOT YET USED
yarn-install-for-production: &yarn-install-prod
  - run:
      name: remove node_modules
      command: rm -rf /node_modules
  - run:
      name: yarn install --prod
      no_output_timeout: 30m # just in case Render has a slow environment
      command: yarn install --prod

jobs:
  ui-unit-tests:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/client
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - run:
          name: UI unit tests
          command: yarn test
      - store_test_results:
          path: ui-test-results/unit

  ui-e2e-tests:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/client
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - run:
          name: Install Playwright
          command: yarn playwright install
      - run:
          name: UI e2e tests
          command: yarn e2e-test
      - store_test_results:
          path: ui-test-results/e2e

  tsc-check-client:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/client
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - <<: *tsc-check

  tsc-check-server:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/server
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - <<: *tsc-check

  deploy-server-job:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/server
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - <<: *tsc-check
      - run:
          name: Deploy server via webhook
          command: curl ${DEPLOY_SERVER_WEBHOOK}

  deploy-ui-job:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/client
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - <<: *tsc-check
      - run:
          name: Build UI
          command: yarn build
      - run:
          name: Deploy UI
          command: curl ${DEPLOY_UI_WEBHOOK}

  deploy-storybook-job:
    <<: *docker-node
    working_directory: ~/scavenger-hunt/client
    parallelism: 2
    steps:
      - <<: *git-checkout-root
      - <<: *yarn-install
      - run:
          name: Build Storybook
          command: yarn build-storybook
      - run:
          name: Deploy Storybook
          command: curl ${DEPLOY_STORYBOOK_WEBHOOK}

workflows:
  tsc-checks:
    jobs:
      - tsc-check-client
      - tsc-check-server
  test:
    jobs:
      - ui-unit-tests
  deploy:
    when:
      equal: [<< pipeline.git.branch >>, master]
    jobs:
      - deploy-storybook-job
      - deploy-server-job
      - deploy-ui-job:
          requires:
            - deploy-server-job
      - ui-e2e-tests:
          requires:
            - deploy-ui-job
