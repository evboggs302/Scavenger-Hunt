type Query {
  getResponsesByTeam(id: ID!): [ResponsePayload!]
  getResponsesByClue(id: ID!): [ResponsePayload!]
}

type Mutation {
  markResponseCorrect(id: ID!): CorrectResponsePayload!
  sendHint(input: SendHintInput!): HintPayload!
  deleteAllResponsesByTeam(id: ID!): DeleteResponses!
  deleteAllResponsesByHunt(id: ID!): DeleteResponses!
}

type Responses {
  _id: ID!
  clue_id: String!
  team_id: String!
  time_received: String
  response_txt: String
  correct: Boolean
  hint_sent: Boolean
}
union ResponsePayload =
    Responses
  | NotFoundError
  | AuthorizationError
  | InvalidInputError
  | UnknownError

type CorrectResponse {
  correct: Boolean
}
union CorrectResponsePayload =
    CorrectResponse
  | NotFoundError
  | AuthorizationError
  | InvalidInputError
  | UnknownError

type HintSent {
  sent: Boolean
}
union HintPayload =
    HintSent
  | NotFoundError
  | AuthorizationError
  | InvalidInputError
  | UnknownError

union DeleteResponses =
    Delete
  | NotFoundError
  | AuthorizationError
  | InvalidInputError
  | UnknownError

input SendHintInput {
  response_id: ID!
  team_id: ID!
  hint_body: String!
}
