type Query {
  getTeamsByHuntId(h_id: ID!): [Team]!
  getTeam(id: ID!): Team!
}

type Mutation {
  createSingleTeam(input: CreateSingleTeamInput!): Team!
  createMultipleTeams(input: CreateMultipleTeamsInput!): [Team]!
  updateTeam(input: UpdateTeamInput!): Team!
  deleteTeam(team_id: ID!): Boolean!
  deleteAllTeamsByHuntId(hunt_id: ID!): Boolean!
}

type Team {
  _id: ID!
  hunt_id: ID!
  recall_sent: Boolean!
  last_clue_sent: Int!
  members: [String!]!
  device_number: String!
  responses: [ResponsePayload!]
}

input SingleTeam {
  members: [String!]
  device_number: String!
}

input CreateMultipleTeamsInput {
  hunt_id: String!
  teams: [SingleTeam]!
}

input CreateSingleTeamInput {
  hunt_id: String!
  members: [String]!
  device_number: String!
}

input UpdateTeamInput {
  team_id: ID!
  members: [String]
  device_number: String
}

input DeleteTeamInput {
  team_id: ID!
}
