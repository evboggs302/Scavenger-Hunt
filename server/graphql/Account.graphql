extend type Query {
  fetchCustomerSubscription: CustomerSubscription
  fetchSubscriptionProduct: SubscriptionProduct!
  fetchStripeCharges: [StripeCharge]!
  fetchStripePaymentMethod: PaymentMethod
}

extend type Mutation {
  createSubscription(payment_method_id: String!): CreateSubscriptionPayload!
  resubscribe: CustomerSubscription!
  cancelSubscription: Boolean!
}

interface StripeSubscription {
  id: String!
  description: String
  priceId: String!
  amount: Int!
}

type SubscriptionProduct implements StripeSubscription {
  id: String!
  description: String
  priceId: String!
  amount: Int!
}

type CustomerSubscription implements StripeSubscription {
  id: String!
  description: String
  priceId: String!
  amount: Int!
  status: String!
}

type CreateSubscriptionPayload {
  id: String!
  clientSecret: String!
}

type StripeCharge {
  id: String!
  date: Int!
  status: String!
  amount: Int!
  description: String
  paymentCard: PaymentCard!
  paymentIntent: String
}

type PaymentCard {
  brand: String
  last4: String
}

type StripePaymentIntent {
  id: String!
}

type PaymentMethod {
  id: String!
  brand: String!
  last4: String!
}
