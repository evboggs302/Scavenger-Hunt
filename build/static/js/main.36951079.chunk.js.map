{"version":3,"sources":["dux/reducers/huntReducer.js","dux/reducers/teamsReducer.js","dux/reducers/cluesReducer.js","utils/apiUtils.ts","ui/pages/landing/tempLandingPage.js","ui/pages/hunts/HuntsPage.js","ui/pages/clues/CluesPage.js","ui/pages/teams/TeamsPage.js","ui/pages/responses/ResponseTile.js","ui/pages/responses/ResponsesPage.js","utils/routes.js","App.js","dux/reducers/userReducer.js","dux/store.js","reportWebVitals.js","index.js"],"names":["initialState","huntSlice","createSlice","name","reducers","setHunt","state","action","payload","actions","userSlice","setTeams","cluesSlice","setClues","createHunt","a","axios","post","user_id","createTeams","hunt_id","teams","createClues","cluesList","activateHunt","put","data","fetchHuntData","get","fetchTeamsByHunt","fetchResponses","markResponseCorrect","response_id","sendHint","team_id","hint","hint_body","TempLandingPage","useSelector","dispatch","useDispatch","huntName","useRef","history","useHistory","buttonClick","console","log","current","clues","push","type","onChange","e","target","value","onClick","HuntsPage","activationClick","hunt","_id","activeHunt","isActive","length","placeholder","CluesPage","useState","cluesExist","setCluesExist","cluesLength","setLength","setTempClues","draft","useEffect","tempClues","i","mappedClueTemplates","map","el","dex","id","cols","rows","mappedClues","description","saveClues","TeamsPage","teamsExist","setTeamsExist","teamsNumber","setTeamNum","setTempTeams","saveReady","setReady","keyCount","Object","keys","tempTeams","mappedTeamTemplates","copy","slice","members","split","trim","updateTeamMembers","required","pattern","phone","updateTeamPhone","teamStatus","useQuery","saveTeams","isLoading","status","join","lastClue_sent","recall_sent","ResponseTile","response","markCorrect","index","date","Date","time_received","className","response_img","img","src","alt","response_txt","Intl","DateTimeFormat","hour","minute","second","format","ResponsesPage","responses","queryKey","queryFn","allResponses","refetchInterval","sendHintInstead","resp","correct","hintSent","Routes","exact","path","component","render","queryClient","QueryClient","App","to","WrappedApp","QueryClientProvider","client","user","following","otherPerson","setUser","store","configureStore","reducer","userReducer","huntReducer","teamsReducer","cluesReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.36951079.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {};\n\nconst huntSlice = createSlice({\n  name: \"hunt\",\n  initialState,\n  reducers: {\n    setHunt(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setHunt } = huntSlice.actions;\nexport default huntSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = [];\n\nconst userSlice = createSlice({\n  name: \"teams\",\n  initialState,\n  reducers: {\n    setTeams(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setTeams } = userSlice.actions;\nexport default userSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = [];\nconst cluesSlice = createSlice({\n  name: \"clues\",\n  initialState,\n  reducers: {\n    setClues(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setClues } = cluesSlice.actions;\nexport default cluesSlice.reducer;\n","import axios from \"axios\";\n\nexport const sendLogin = async (uname: string, pw: string) => {\n  return await axios.post(\"/api/user/login\", { userName: uname, password: pw });\n};\n\nexport const fetchActiveUser = async () => {\n  return await axios\n    .get(\"/api/user/getAll\")\n    .then((res) => console.log(res.data));\n};\n\nexport const createHunt = async (name: string) => {\n  return await axios.post(\"/api/hunt/create\", {\n    user_id: \"6130042d8552f46dd1251951\",\n    name,\n  });\n  // .then((res) => console.log(res.data));\n};\n\nexport const createTeams = async (hunt_id: string, teams: string[]) => {\n  return await axios.post(\"/api/teams/create\", { hunt_id, teams });\n  // .then((res) => console.log(res.data));\n};\n\nexport const createClues = async (hunt_id: string, cluesList: string[]) => {\n  return await axios.post(\"/api/clues/create\", { hunt_id, cluesList });\n  // .then((res) => console.log(res.data));\n};\n\nexport const activateHunt = async (hunt_id: string) => {\n  const { data } = await axios.put(\"/api/hunt/activate\", { hunt_id });\n  return data;\n};\n\nexport const fetchHuntData = async (hunt_id: string) => {\n  const { data } = await axios.get(`/api/hunt/data/${hunt_id}`);\n  return data;\n};\n\nexport const fetchUserHunts = async (user_id: string) => {\n  return await axios.get(\"/api/hunt/byUser\", { data: { user_id } });\n  // .then((res) => console.log(res.data));\n};\n\nexport const fetchTeamsByHunt = async (hunt_id: string) => {\n  const { data } = await axios.get(`/api/teams/byHunt/${hunt_id}`);\n  return data;\n};\n\nexport const fetchResponses = async (hunt_id: string) => {\n  const { data } = await axios.get(`/api/response/allByHunt/${hunt_id}`);\n  return data;\n};\n\nexport const markResponseCorrect = async (response_id: string) => {\n  const { data } = await axios.put(`/api/response/markCorrect`, {\n    response_id,\n  });\n  return data;\n};\n\nexport const sendHint = async (\n  response_id: string,\n  team_id: string,\n  hint: string\n) => {\n  const { data } = await axios.post(`/api/response/sendHint`, {\n    response_id,\n    team_id,\n    hint_body: hint,\n  });\n  return data;\n};\n","import { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setHunt } from \"../../../dux/reducers/huntReducer\";\nimport { setTeams } from \"../../../dux/reducers/teamsReducer\";\nimport { setClues } from \"../../../dux/reducers/cluesReducer\";\nimport { fetchHuntData } from \"../../../utils/apiUtils.ts\";\n\n// 61323e0247dc492611e225dc\n\nconst TempLandingPage = () => {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const huntName = useRef(\"\");\n  let history = useHistory();\n\n  const buttonClick = async () => {\n    console.log(huntName.current);\n    const data = await fetchHuntData(huntName.current);\n    console.log(data);\n    dispatch(setHunt(data[0]));\n    dispatch(setTeams(data[0].teams));\n    dispatch(setClues(data[0].clues));\n    return history.push(\"/hunt\");\n  };\n\n  console.log(state);\n  return (\n    <div>\n      <h2>Welcome!</h2>\n      <br />\n      <p>give instructions hers</p>\n      <br />\n      <p>Already have an active hunt? Enter the hunt id below.</p>\n      <input\n        type=\"text\"\n        onChange={(e) => (huntName.current = e.target.value)}\n      />\n      <button onClick={buttonClick}>Go to Hunt</button>\n    </div>\n  );\n};\nexport default TempLandingPage;\n","import { useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setHunt } from \"../../../dux/reducers/huntReducer\";\nimport { createHunt, activateHunt } from \"../../../utils/apiUtils.ts\";\nimport \"./huntspage.scss\";\n\nconst HuntsPage = () => {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const huntName = useRef(\"\");\n  let history = useHistory();\n\n  const buttonClick = async () => {\n    const { data } = await createHunt(huntName.current);\n    huntName.current = \"\";\n    return dispatch(setHunt(data[0]));\n  };\n\n  const activationClick = async () => {\n    const ok = await activateHunt(state.hunt._id);\n    if (ok) {\n      const activeHunt = { ...state.hunt, isActive: true };\n      dispatch(setHunt(activeHunt));\n      return history.push(\"/responses\");\n    } else {\n      return;\n    }\n  };\n\n  return (\n    <div>\n      {!state.hunt.name ? (\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Hunt Name\"\n            onChange={(e) => (huntName.current = e.target.value)}\n          />\n          <button onClick={buttonClick}>Create Hunt</button>{\" \"}\n        </>\n      ) : (\n        <>\n          <br />\n          <span>\n            HUNT NAME:{\"  \"}\n            <strong>\n              <em>{state.hunt.name}</em>\n            </strong>\n          </span>\n          <br />\n          {state.clues.length > 0 &&\n            state.teams.length > 0 &&\n            !state.hunt.isActive && (\n              <button onClick={activationClick}>Activate Hunt!</button>\n            )}\n        </>\n      )}\n    </div>\n  );\n};\nexport default HuntsPage;\n","import { useState, useRef, useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { setClues } from \"../../../dux/reducers/cluesReducer\";\nimport { createClues } from \"../../../utils/apiUtils.ts\";\n\nconst CluesPage = () => {\n  const state = useSelector((state) => state);\n  const [cluesExist, setCluesExist] = useState(false);\n  const [cluesLength, setLength] = useState(0);\n  const [clues, setTempClues] = useState([]);\n  const draft = useRef(null);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (!state.hunt._id) {\n      history.push(\"/\");\n    }\n    if (state.clues.length > 0) {\n      setCluesExist(true);\n    }\n    draft.current = [];\n  }, []);\n\n  useEffect(() => {\n    let tempClues = [];\n    for (let i = 0; i < cluesLength; i++) {\n      tempClues.push(\"\");\n    }\n    setTempClues(tempClues);\n  }, [cluesLength]);\n\n  const mappedClueTemplates = clues.map((el, dex) => {\n    return (\n      <Fragment key={dex + 1}>\n        <textarea\n          name=\"clueText\"\n          id={dex}\n          cols=\"30\"\n          rows=\"10\"\n          onChange={(e) => (draft.current[dex] = e.target.value)}></textarea>\n        <br />\n      </Fragment>\n    );\n  });\n\n  const mappedClues = state.clues.map((el) => {\n    return <li key={el._id}>{el.description}</li>;\n  });\n\n  const saveClues = async () => {\n    const { data } = await createClues(state.hunt._id, draft.current);\n    dispatch(setClues(data));\n    setCluesExist(true);\n    return;\n  };\n\n  return (\n    <div>\n      {!cluesExist ? (\n        <>\n          <section>Create your clues below.</section>\n          <br />\n          <span>\n            <div>How many clues?</div>\n            <input type=\"number\" onChange={(e) => setLength(+e.target.value)} />\n          </span>\n        </>\n      ) : null}\n      <br />\n      {!cluesExist ? (\n        <span>{mappedClueTemplates}</span>\n      ) : (\n        <ol>{mappedClues}</ol>\n      )}\n      {!cluesExist && <button onClick={saveClues}>Save Clues</button>}\n    </div>\n  );\n};\nexport default CluesPage;\n","import { useEffect, useState, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useQuery } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { setTeams } from \"../../../dux/reducers/teamsReducer\";\nimport { createTeams, fetchTeamsByHunt } from \"../../../utils/apiUtils.ts\";\n\nconst TeamsPage = () => {\n  const state = useSelector((state) => state);\n  const [teamsExist, setTeamsExist] = useState(false);\n  const [teamsNumber, setTeamNum] = useState(0);\n  const [teams, setTempTeams] = useState([]);\n  const [saveReady, setReady] = useState(false);\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (!state.hunt._id) {\n      history.push(\"/\");\n    }\n    if (state.teams.length > 0) {\n      setTeamsExist(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    let keyCount = 0;\n    for (let i = 0; i < teams.length; i++) {\n      keyCount += Object.keys(teams[i]).length;\n    }\n    const hasKeys = teams.length * 2 === keyCount && teams.length > 0;\n    if (hasKeys) {\n      setReady(true);\n    }\n  }, [teams]);\n\n  useEffect(() => {\n    let tempTeams = [];\n    for (let i = 0; i < teamsNumber; i++) {\n      tempTeams.push({});\n    }\n    setTempTeams(tempTeams);\n  }, [teamsNumber]);\n\n  const updateTeamMembers = (value, dex) => {\n    let copy = teams.slice();\n    copy[dex].members = value.split(\",\").map((el) => el.trim());\n    setTempTeams(copy);\n  };\n  const updateTeamPhone = (value, dex) => {\n    let copy = teams.slice();\n    copy[dex].phone = value;\n    setTempTeams(copy);\n  };\n\n  const mappedTeamTemplates = teams.map((el, dex) => {\n    return (\n      <Fragment key={dex + 1}>\n        <textarea\n          name=\"clueText\"\n          id={dex}\n          placeholder=\"MEMBERS (comma separated)\"\n          cols=\"30\"\n          rows=\"10\"\n          onChange={(e) => updateTeamMembers(e.target.value, dex)}\n          required></textarea>\n        <br />\n        PHONE NUMBER:{\" \"}\n        <input\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n          required\n          onChange={(e) => updateTeamPhone(e.target.value, dex)}\n        />\n        <small>Format: 123-456-7890</small>\n        <br />\n      </Fragment>\n    );\n  });\n\n  const teamStatus = useQuery(\"teams\", async () => {\n    const data = await fetchTeamsByHunt(state.hunt._id);\n    return data[0].teams;\n  });\n\n  const saveTeams = async () => {\n    const { data } = await createTeams(state.hunt._id, teams);\n    dispatch(setTeams(data[0].teams));\n    setTeamsExist(true);\n    return;\n  };\n\n  console.log(teamStatus);\n  return (\n    <div>\n      {!teamsExist ? (\n        <>\n          <section>Create your teams below.</section>\n          <br />\n          <span>\n            <div>How many teams?</div>\n            <input\n              type=\"number\"\n              onChange={(e) => setTeamNum(+e.target.value)}\n            />\n          </span>\n        </>\n      ) : null}\n      <br />\n      {!teamsExist ? (\n        <span>{mappedTeamTemplates}</span>\n      ) : (\n        <span>\n          {teamStatus.isLoading && <p>Loading Teams...</p>}\n          {teamStatus.status === \"success\" &&\n            teamStatus.data.map((el) => {\n              return (\n                <div key={el._id}>\n                  <h4>\n                    MEMBERS: <em>{el.members.join(\", \")}</em>\n                  </h4>\n                  <p>\n                    Last Clue Sent: <em>{el.lastClue_sent}</em>\n                  </p>\n                  <p>\n                    Recal Message Sent: <em>{el.recall_sent ? \"Yes\" : \"No\"}</em>\n                  </p>\n                </div>\n              );\n            })}\n        </span>\n      )}\n      {!teamsExist && saveReady && (\n        <button onClick={saveTeams}>Save Teams</button>\n      )}\n    </div>\n  );\n};\nexport default TeamsPage;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Resp.scss\";\n\nconst ResponseTile = ({ response, index, markCorrect, sendHint }) => {\n  const { clues } = useSelector((state) => state);\n  //   const clue = clues.filter((cl) => cl._id === response.clue_id);\n  let date = new Date(response.time_received);\n  return (\n    <section className=\"respTile\">\n      {response.response_img ? (\n        response.response_img.map((img) => {\n          return <img className=\"respIMG\" src={img} alt=\"response img\" />;\n        })\n      ) : (\n        <p>{response.response_txt}</p>\n      )}\n      <br />\n      {/* <p>CLUE: </p> */}\n      <p>\n        Time Received:{\" \"}\n        {new Intl.DateTimeFormat(\"default\", {\n          hour: \"numeric\",\n          minute: \"numeric\",\n          second: \"numeric\",\n        }).format(date)}\n      </p>\n      <br />\n      <span className=\"vaidation-button-container\">\n        <button\n          onClick={() =>\n            sendHint(\n              response._id,\n              response.team_id,\n              \"Nope! Try Again. If you get stuck, call Aunt Lo.\"\n            )\n          }>\n          Incorrect\n        </button>\n        <button onClick={() => markCorrect(response._id)}>Correct!</button>\n      </span>\n    </section>\n  );\n};\nexport default ResponseTile;\n","import { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport ResponseTile from \"./ResponseTile\";\nimport {\n  fetchResponses,\n  markResponseCorrect,\n  sendHint,\n} from \"../../../utils/apiUtils.ts\";\nimport \"./Resp.scss\";\n\nconst ResponsesPage = () => {\n  const state = useSelector((state) => state);\n  let history = useHistory();\n\n  useEffect(() => {\n    if (!state.hunt._id) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  const responses = useQuery({\n    queryKey: \"responses\",\n    queryFn: async () => {\n      const data = await fetchResponses(state.hunt._id);\n      console.log(data);\n      return data[0].allResponses;\n    },\n    refetchInterval: 1000,\n  });\n\n  const markCorrect = (response_id) => {\n    return markResponseCorrect(response_id);\n  };\n  const sendHintInstead = async (response_id, team_id, hint) => {\n    return sendHint(response_id, team_id, hint);\n  };\n\n  return (\n    <div>\n      <h3>Responses PAGE</h3>\n      <br />\n      {responses.isLoading && <h5>Fetching Responses...</h5>}\n      <div className=\"responseContainer\">\n        {responses.status === \"success\" &&\n          responses.data.map((resp, dex) => {\n            return !resp.correct && !resp.hintSent ? (\n              <ResponseTile\n                key={resp._id}\n                response={resp}\n                index={dex}\n                markCorrect={markCorrect}\n                sendHint={sendHintInstead}\n              />\n            ) : null;\n          })}\n      </div>\n    </div>\n  );\n};\nexport default ResponsesPage;\n","import { Switch, Route } from \"react-router-dom\";\n// import LandingPage from \"../ui/pages/landing/LandingPage\";\n// import Login from \"../ui/pages/login/LoginPage\";\nimport TempLandingPage from \"../ui/pages/landing/tempLandingPage\";\nimport HuntsPage from \"../ui/pages/hunts/HuntsPage\";\nimport CluesPage from \"../ui/pages/clues/CluesPage\";\nimport TeamsPage from \"../ui/pages/teams/TeamsPage\";\nimport ResponsesPage from \"../ui/pages/responses/ResponsesPage\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      {/* <Route exact path=\"/\" component={Login} /> */}\n      <Route exact path=\"/\" component={TempLandingPage} />\n      <Route path=\"/hunt\" component={HuntsPage} />\n      <Route path=\"/clues\" component={CluesPage} />\n      <Route path=\"/teams\" component={TeamsPage} />\n      <Route path=\"/responses\" component={ResponsesPage} />\n      <Route\n        path=\"*\"\n        render={() => {\n          return <div> 404 file not found</div>;\n        }}\n      />\n    </Switch>\n  );\n}\n","// import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport Routes from \"./utils/routes.js\";\n// import { fetchActiveUser } from \"./utils/apiUtils.ts\";\nimport \"./App.css\";\n\nconst queryClient = new QueryClient();\n\nfunction WrappedApp() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"app-navigation\">\n        <h3>\n          <Link to=\"/\">Home</Link>\n        </h3>\n        <h3>\n          <Link to=\"/hunt\">Hunt Info</Link>\n        </h3>\n        <h3>\n          <Link to=\"/clues\">Clues</Link>\n        </h3>\n        <h3>\n          <Link to=\"/teams\">Teams</Link>\n        </h3>\n        <h3>\n          <Link to=\"/responses\">Responses</Link>\n        </h3>\n      </nav>\n      <br />\n      <Routes />\n    </div>\n  );\n}\n\nexport default WrappedApp;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const initialState = {\n  user: null,\n  following: null,\n  otherPerson: [],\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    setUser(state, action) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setUser } = userSlice.actions;\nexport default userSlice.reducer;\n\n// const SET_USER = \"SET_USER\";\n// const SET_FOLLOWING = \"SET_FOLLOWING\";\n// const SET_OTHER_PERSON = \"SET_OTHER_PERSON\";\n\n// export default function userReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case SET_USER:\n//       return { ...state, user: action.payload };\n//     case SET_FOLLOWING:\n//       return { ...state, following: action.payload };\n//     case SET_OTHER_PERSON:\n//       return { ...state, otherPerson: action.payload };\n//     default:\n//       return state;\n//   }\n// }\n\n// export function setUser(user) {\n//   return {\n//     type: SET_USER,\n//     payload: user,\n//   };\n// }\n\n// export function setFollowing(following) {\n//   return {\n//     type: SET_FOLLOWING,\n//     payload: following,\n//   };\n// }\n\n// export function setOtherPerson(info) {\n//   return {\n//     type: SET_OTHER_PERSON,\n//     payload: info,\n//   };\n// }\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer, { initialState as userState } from \"./reducers/userReducer\";\nimport huntReducer, { initialState as huntState } from \"./reducers/huntReducer\";\nimport teamsReducer, {\n  initialState as teamsState,\n} from \"./reducers/teamsReducer\";\nimport cluesReducer, {\n  initialState as cluesState,\n} from \"./reducers/cluesReducer\";\n// import responsesReducer, {\n//   initialState as responsesState,\n// } from \"./reducers/responsesReducer\";\n\nexport const initialState = {\n  user: userState,\n  hunt: huntState,\n  teams: teamsState,\n  clues: cluesState,\n  // responses: responsesState,\n};\n\nconst store = configureStore({\n  reducer: {\n    user: userReducer,\n    hunt: huntReducer,\n    teams: teamsReducer,\n    clues: cluesReducer,\n    // responses: responsesReducer,\n  },\n});\n\nexport default store;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport store from \"./dux/store\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}